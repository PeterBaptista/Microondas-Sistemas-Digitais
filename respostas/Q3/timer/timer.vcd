$date
	Sun Sep 24 15:18:03 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_timer $end
$var wire 1 ! zero $end
$var wire 4 " bcd_output_usec [3:0] $end
$var wire 4 # bcd_output_min [3:0] $end
$var wire 4 $ bcd_output_dsec [3:0] $end
$var reg 4 % bcd_input [3:0] $end
$var reg 1 & clear $end
$var reg 1 ' clk $end
$var reg 1 ( load $end
$var reg 1 ) stop $end
$scope module dut $end
$var wire 4 * bcd_input [3:0] $end
$var wire 4 + bcd_output_dsec [3:0] $end
$var wire 4 , bcd_output_min [3:0] $end
$var wire 4 - bcd_output_usec [3:0] $end
$var wire 1 & clear $end
$var wire 1 ' clk $end
$var wire 1 ( load $end
$var wire 1 ) stop $end
$var wire 1 . tc_counter_mod10_min_aux $end
$var wire 1 ! zero $end
$var wire 1 / zero_counter_mod6_dsec $end
$var wire 1 0 zero_counter_mod10_usec $end
$var wire 1 1 zero_counter_mod10_min $end
$var wire 1 2 tc_counter_mod6_dsec $end
$var wire 1 3 tc_counter_mod10_usec $end
$var wire 1 4 tc_counter_mod10_min $end
$var wire 4 5 bcd_digit_output_counter_mod6_dsec [3:0] $end
$var wire 4 6 bcd_digit_output_counter_mod10_usec [3:0] $end
$var wire 4 7 bcd_digit_output_counter_mod10_min [3:0] $end
$scope module counter_mod10_min $end
$var wire 4 8 bcd_digit_output [3:0] $end
$var wire 1 & clear $end
$var wire 1 ' clk $end
$var wire 1 ( load $end
$var wire 1 . stop $end
$var wire 1 1 zero $end
$var wire 1 4 tc $end
$var wire 4 9 bcd_digit_input [3:0] $end
$var reg 4 : bcd_digit_reg [3:0] $end
$upscope $end
$scope module counter_mod10_usec $end
$var wire 4 ; bcd_digit_input [3:0] $end
$var wire 4 < bcd_digit_output [3:0] $end
$var wire 1 & clear $end
$var wire 1 ' clk $end
$var wire 1 ( load $end
$var wire 1 ) stop $end
$var wire 1 0 zero $end
$var wire 1 3 tc $end
$var reg 4 = bcd_digit_reg [3:0] $end
$upscope $end
$scope module counter_mod6_dsec $end
$var wire 4 > bcd_digit_input [3:0] $end
$var wire 4 ? bcd_digit_output [3:0] $end
$var wire 1 & clear $end
$var wire 1 ' clk $end
$var wire 1 ( load $end
$var wire 1 3 stop $end
$var wire 1 / zero $end
$var wire 1 2 tc $end
$var reg 4 @ bcd_digit_reg [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx @
bx ?
bx >
bx =
bx <
b11 ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
x4
x3
x2
x1
x0
x/
x.
bx -
bx ,
bx +
b11 *
0)
0(
0'
1&
b11 %
bx $
bx #
bx "
x!
$end
#5
1!
0.
03
10
b0 "
b0 -
b0 6
b0 <
b0 >
b0 =
02
1/
b0 $
b0 +
b0 5
b0 9
b0 ?
b0 @
04
11
b0 #
b0 ,
b0 7
b0 8
b0 :
1'
#10
0'
0&
#15
1.
0!
14
01
b1001 #
b1001 ,
b1001 7
b1001 8
b1001 :
12
0/
b101 $
b101 +
b101 5
b101 9
b101 ?
b101 @
13
00
b1001 "
b1001 -
b1001 6
b1001 <
b1001 >
b1001 =
1'
#20
0'
#25
b1000 "
b1000 -
b1000 6
b1000 <
b1000 >
b1000 =
1'
#30
0'
#35
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#40
0'
#45
b110 "
b110 -
b110 6
b110 <
b110 >
b110 =
1'
#50
0'
#55
b101 "
b101 -
b101 6
b101 <
b101 >
b101 =
1'
#60
0'
#65
b100 "
b100 -
b100 6
b100 <
b100 >
b100 =
1'
#70
0'
#75
b11 "
b11 -
b11 6
b11 <
b11 >
b11 =
1'
#80
0'
#85
b10 "
b10 -
b10 6
b10 <
b10 >
b10 =
1'
#90
0'
#95
b1 "
b1 -
b1 6
b1 <
b1 >
b1 =
1'
#100
0'
#105
03
10
b0 "
b0 -
b0 6
b0 <
b0 >
b0 =
1'
#110
0'
#115
b100 $
b100 +
b100 5
b100 9
b100 ?
b100 @
13
00
b1001 "
b1001 -
b1001 6
b1001 <
b1001 >
b1001 =
1'
#120
0'
#125
b1000 "
b1000 -
b1000 6
b1000 <
b1000 >
b1000 =
1'
#130
0'
#135
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#140
0'
#145
b110 "
b110 -
b110 6
b110 <
b110 >
b110 =
1'
#150
0'
#155
b101 "
b101 -
b101 6
b101 <
b101 >
b101 =
1'
#160
0'
#165
b100 "
b100 -
b100 6
b100 <
b100 >
b100 =
1'
#170
0'
#175
b11 "
b11 -
b11 6
b11 <
b11 >
b11 =
1'
#180
0'
#185
b10 "
b10 -
b10 6
b10 <
b10 >
b10 =
1'
#190
0'
#195
b1 "
b1 -
b1 6
b1 <
b1 >
b1 =
1'
#200
0'
#205
03
10
b0 "
b0 -
b0 6
b0 <
b0 >
b0 =
1'
#210
0'
#215
b11 $
b11 +
b11 5
b11 9
b11 ?
b11 @
13
00
b1001 "
b1001 -
b1001 6
b1001 <
b1001 >
b1001 =
1'
#220
0'
#225
b1000 "
b1000 -
b1000 6
b1000 <
b1000 >
b1000 =
1'
#230
0'
#235
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#240
0'
#245
b110 "
b110 -
b110 6
b110 <
b110 >
b110 =
1'
#250
0'
#255
b101 "
b101 -
b101 6
b101 <
b101 >
b101 =
1'
#260
0'
#265
b100 "
b100 -
b100 6
b100 <
b100 >
b100 =
1'
#270
0'
#275
b11 "
b11 -
b11 6
b11 <
b11 >
b11 =
1'
#280
0'
#285
b10 "
b10 -
b10 6
b10 <
b10 >
b10 =
1'
#290
0'
#295
b1 "
b1 -
b1 6
b1 <
b1 >
b1 =
1'
#300
0'
#305
03
10
b0 "
b0 -
b0 6
b0 <
b0 >
b0 =
1'
#310
0'
#315
b10 $
b10 +
b10 5
b10 9
b10 ?
b10 @
13
00
b1001 "
b1001 -
b1001 6
b1001 <
b1001 >
b1001 =
1'
#320
0'
#325
b1000 "
b1000 -
b1000 6
b1000 <
b1000 >
b1000 =
1'
#330
0'
#335
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#340
0'
#345
b110 "
b110 -
b110 6
b110 <
b110 >
b110 =
1'
#350
0'
#355
b101 "
b101 -
b101 6
b101 <
b101 >
b101 =
1'
#360
0'
#365
b100 "
b100 -
b100 6
b100 <
b100 >
b100 =
1'
#370
0'
#375
b11 "
b11 -
b11 6
b11 <
b11 >
b11 =
1'
#380
0'
#385
b10 "
b10 -
b10 6
b10 <
b10 >
b10 =
1'
#390
0'
#395
b1 "
b1 -
b1 6
b1 <
b1 >
b1 =
1'
#400
0'
#405
03
10
b0 "
b0 -
b0 6
b0 <
b0 >
b0 =
1'
#410
0'
#415
b1 $
b1 +
b1 5
b1 9
b1 ?
b1 @
13
00
b1001 "
b1001 -
b1001 6
b1001 <
b1001 >
b1001 =
1'
#420
0'
#425
b1000 "
b1000 -
b1000 6
b1000 <
b1000 >
b1000 =
1'
#430
0'
#435
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#440
0'
#445
b110 "
b110 -
b110 6
b110 <
b110 >
b110 =
1'
#450
0'
#455
b101 "
b101 -
b101 6
b101 <
b101 >
b101 =
1'
#460
0'
#465
b100 "
b100 -
b100 6
b100 <
b100 >
b100 =
1'
#470
0'
#475
b11 "
b11 -
b11 6
b11 <
b11 >
b11 =
1'
#480
0'
#485
b10 "
b10 -
b10 6
b10 <
b10 >
b10 =
1'
#490
0'
#495
b1 "
b1 -
b1 6
b1 <
b1 >
b1 =
1'
#500
0'
#505
03
10
b0 "
b0 -
b0 6
b0 <
b0 >
b0 =
1'
#510
0'
b111 %
b111 *
b111 ;
1(
#515
b1 #
b1 ,
b1 7
b1 8
b1 :
02
1/
b0 $
b0 +
b0 5
b0 9
b0 ?
b0 @
13
00
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#520
0'
#525
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
12
0/
b111 $
b111 +
b111 5
b111 9
b111 ?
b111 @
04
11
b0 #
b0 ,
b0 7
b0 8
b0 :
1'
#530
0'
#535
14
01
b111 #
b111 ,
b111 7
b111 8
b111 :
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#540
0'
#545
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#550
0'
#555
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#560
0'
#565
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#570
0'
#575
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#580
0'
#585
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#590
0'
#595
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#600
0'
#605
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#610
0'
0(
#615
b110 "
b110 -
b110 6
b110 <
b110 >
b110 =
1'
#620
0'
#625
b101 "
b101 -
b101 6
b101 <
b101 >
b101 =
1'
#630
0'
#635
b100 "
b100 -
b100 6
b100 <
b100 >
b100 =
1'
#640
0'
#645
b11 "
b11 -
b11 6
b11 <
b11 >
b11 =
1'
#650
0'
#655
b10 "
b10 -
b10 6
b10 <
b10 >
b10 =
1'
#660
0'
#665
b1 "
b1 -
b1 6
b1 <
b1 >
b1 =
1'
#670
0'
#675
03
10
b0 "
b0 -
b0 6
b0 <
b0 >
b0 =
1'
#680
0'
#685
13
00
b1001 "
b1001 -
b1001 6
b1001 <
b1001 >
b1001 =
b110 $
b110 +
b110 5
b110 9
b110 ?
b110 @
1'
#690
0'
#695
b1000 "
b1000 -
b1000 6
b1000 <
b1000 >
b1000 =
1'
#700
0'
#705
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#710
0'
#715
b110 "
b110 -
b110 6
b110 <
b110 >
b110 =
1'
#720
0'
#725
b101 "
b101 -
b101 6
b101 <
b101 >
b101 =
1'
#730
0'
#735
b100 "
b100 -
b100 6
b100 <
b100 >
b100 =
1'
#740
0'
#745
b11 "
b11 -
b11 6
b11 <
b11 >
b11 =
1'
#750
0'
#755
b10 "
b10 -
b10 6
b10 <
b10 >
b10 =
1'
#760
0'
#765
b1 "
b1 -
b1 6
b1 <
b1 >
b1 =
1'
#770
0'
#775
03
10
b0 "
b0 -
b0 6
b0 <
b0 >
b0 =
1'
#780
0'
#785
13
00
b1001 "
b1001 -
b1001 6
b1001 <
b1001 >
b1001 =
b101 $
b101 +
b101 5
b101 9
b101 ?
b101 @
1'
#790
0'
#795
b1000 "
b1000 -
b1000 6
b1000 <
b1000 >
b1000 =
1'
#800
0'
#805
b111 "
b111 -
b111 6
b111 <
b111 >
b111 =
1'
#810
0'
1)
#815
1'
#820
0'
#825
1'
#830
0'
#835
1'
#840
0'
#845
1'
#850
0'
#855
1'
#860
0'
#865
1'
#870
0'
#875
1'
#880
0'
#885
1'
#890
0'
#895
1'
#900
0'
#905
1'
#910
0'
#915
1'
#920
0'
#925
1'
#930
0'
#935
1'
#940
0'
#945
1'
#950
0'
#955
1'
#960
0'
#965
1'
#970
0'
#975
1'
#980
0'
#985
1'
#990
0'
#995
1'
#1000
0'
#1005
1'
#1010
0'
